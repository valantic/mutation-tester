/*
 * Copyright [2022] [valantic CEC Schweiz AG]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Written by Fabian HÃ¼sig, February, 2022
 */
plugins {
    id "java"
    id "org.jetbrains.intellij" version "$intellijPluginVersion"
    id "info.solidsoft.pitest" version "$pitGradleVersion"
    id "jacoco"
    id "org.sonarqube" version "$sonarqubeVersion"
}

group "com.valantic"
version "$pluginVersion"

sourceCompatibility = "$javaSourceCompatibility"

repositories {
    mavenCentral()
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version = "$intellijVersion"
    plugins = ["JUnit", "com.intellij.java"]
    updateSinceUntilBuild.set(false)
}

pitest {
    timestampedReports = false
    pitestVersion = "$pitVersion"
    jvmArgs.add("--add-opens")
    jvmArgs.add("java.base/java.io=ALL-UNNAMED")
}

sonarqube {
    properties {
        property "sonar.projectKey", "valantic_mutation-tester"
        property "sonar.organization", "valantic-cx-ch"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.tests", "src/test"
        property "sonar.scm.disabled", "true"
    }
}

configurations {
    libImplementation
    implementation.extendsFrom(libImplementation)
}

jar {
    from {
        configurations.libImplementation.collect { it.isDirectory() ? it : zipTree(it) }
    }
    dependsOn "instrumentTestCode"
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

test.finalizedBy jacocoTestReport

dependencies {
    // https://mvnrepository.com/artifact/org.pitest/pitest
    libImplementation group: "org.pitest", name: "pitest", version: "$pitVersion"

    // https://mvnrepository.com/artifact/org.pitest/pitest-entry
    libImplementation group: "org.pitest", name: "pitest-entry", version: "$pitVersion"

    // https://mvnrepository.com/artifact/org.pitest/pitest-command-line
    libImplementation group: "org.pitest", name: "pitest-command-line", version: "$pitVersion"

    // https://mvnrepository.com/artifact/org.pitest/pitest-junit5-plugin
    libImplementation group: "org.pitest", name: "pitest-junit5-plugin", version: "1.2.1"

    libImplementation "org.junit.jupiter:junit-jupiter-params:1.11.4"
    libImplementation "org.junit.jupiter:junit-jupiter-api:1.11.4"
    libImplementation "org.junit.vintage:junit-vintage-engine:1.11.4"
    libImplementation "org.junit.jupiter:junit-jupiter-engine:1.11.4"

    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter
    testImplementation group:"org.junit.jupiter", name:"junit-jupiter", version:"$junitVersion"

    // https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter
    testImplementation group: "org.mockito", name: "mockito-junit-jupiter", version: "$mockitoVersion"

    // https://mvnrepository.com/artifact/org.mockito/mockito-inline
    testImplementation group: "org.mockito", name: "mockito-inline", version: "$mockitoInlineVersion"

}

buildSearchableOptions {
    enabled = false
}

patchPluginXml {
    version.set(project.version)
    sinceBuild.set("212.4746.92")
}

publishPlugin {
    token = System.getenv("ORG_GRADLE_PROJECT_intellijPublishToken")
}

pitest {
    junit5PluginVersion = "$pitJunit5Version"
    pitestVersion = "$pitVersion"
}

task deleteOldReports(type: Delete) {
    delete "samples/pitreport"
}

task copyPitestReport(type: Copy) {
    from "$buildDir/reports/pitest"
    into "samples/pitreport"
}
